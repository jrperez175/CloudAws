AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template deploys an S3 Bucket with encryption


Parameters:

  pProjectName:
    Description: Nombre del proyecto.
    Type: String

  pApplicationCode:
    Description: Codigo de la aplicacion.
    Type: String

  pEnvironment:
    Description: Environment where it unfolds.
    Type: String

  pS3SFTPRol:
    Description: Nombre del rol para el transfersftp.
    Type: String

  pAWSKeyManagementServicePowerUser:
    Description: Key use for
    Type: String
    Default: arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser

  pSharedAccountNumber:
      Description: number share AccountId'
      Type: String

  pUserSmtp:
    Description: Usuario de Smtp
    Type: String

  pUserPasswdSmtp:
    Description: Password del smtp
    Type: String
    NoEcho: true

  pHostSmtp:
    Description: Nombre del Host del servidor Exchange
    Type: String

  pPortSmtp:
    Description: Port del servidor Exchange
    Type: String

  pPortSmtp:
    Description: Port del servidor Exchange
    Type: String

  pDeploySecretSmtp:
    Description: Desplegar recurso rSecretSmtp
    Type: String

Conditions:

  cDevEnv:
    !Equals [ !Ref pEnvironment, "dev"]

  cDeploySecretSmtp:
    !Equals [ !Ref pDeploySecretSmtp, "true"]

Resources:

  rBucketKmsTransversal:
      Type: AWS::S3::Bucket
      DependsOn: rKmsKeyTransversal
      Properties:
        AccessControl: Private
        BucketName: !Join ["-", [ !Ref pApplicationCode, !Ref pProjectName, !Ref pEnvironment, "transversal" ]]
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                KMSMasterKeyID: !GetAtt rKmsKeyTransversal.Arn
                SSEAlgorithm: "aws:kms"
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        Tags:
          - Key: Name
            Value: !Ref AWS::StackName
          - Key: "bancolombia:info-clientes-proveedores-empleados"
            Value: "clientes-empleados"
          - Key: "bancolombia:info-productos"
            Value: "si"
          - Key: "bancolombia:info-finan-conta-legal"
            Value: "todos"
          - Key: "bancolombia:riesgos-seguridad"
            Value: "ambas"
          - Key: "bancolombia:sox-compliance"
            Value: "si"
          - Key: "bancolombia:impact"
            Value: "bia"
          - Key: "bancolombia:clasificacion-confidencialidad"
            Value: "confidencial"
          - Key: "bancolombia:clasificacion-integridad"
            Value: "impacto critico"
          - Key: "bancolombia:clasificacion-confidencialidad"
            Value: "confidencial"
          - Key: "bancolombia:clasificacion-integridad"
            Value: "impacto critico"
          - Key: "bancolombia:clasificacion-disponibilidad"
            Value: "impacto critico"
          - Key: "bancolombia:dominio-informacion"
            Value: "productos-financiera-contable-legal-riesgos-seguridad"
          - Key: "bancolombia:datos-personales"
            Value: "clientes-empleados"
          - Key: "bancolombia:cumplimiento"
            Value: "sox-bia"

  rS3PolicyArchivos:
    Type: AWS::S3::BucketPolicy
    DependsOn: rBucketKmsTransversal
    Properties:
      Bucket: !Ref rBucketKmsTransversal
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref 'pS3SFTPRol'
                - !Join ["", [ 'arn:aws:iam::', !Ref 'AWS::AccountId' , ':root']]
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetObjectACL
              - s3:PutObjectACL
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref 'rBucketKmsTransversal', /*]]
          - Effect: Allow
            Principal:
              AWS:
                - !Ref 'pS3SFTPRol'
                - !Join ["", [ 'arn:aws:iam::', !Ref 'AWS::AccountId' , ':root']]

            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref 'rBucketKmsTransversal']]

  rIAMRoleForKMS:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join ["-", [!Ref 'AWS::StackName', "role-admin"]]
      ManagedPolicyArns:
        - !Ref pAWSKeyManagementServicePowerUser
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - kms.amazonaws.com
                - s3.amazonaws.com
                - elasticfilesystem.amazonaws.com
                - transfer.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

  rIAMRoleForKMSUser:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join ["-", [!Ref 'AWS::StackName', "role-user"]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - kms.amazonaws.com
                - s3.amazonaws.com
                - elasticfilesystem.amazonaws.com
                - transfer.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
       - PolicyDocument:
           Version: 2012-10-17
           Statement:
            - Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey*
              Resource: !Join [":", ["arn", !Ref AWS::Partition , "kms", !Ref AWS::Region, !Ref AWS::AccountId, "key/*"] ]
              Effect: Allow
         PolicyName: UserKms

  rKmsKeyTransversal:
    Type: AWS::KMS::Key
    Properties:
      Description: !Ref 'AWS::StackName'
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-policy
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref 'AWS::AccountId',":root"]]
            Action:
              - "kms:*"
            Resource: '*'
          - Sid: Allow key admin
            Effect: Allow
            Principal:
              AWS:
              - !GetAtt rIAMRoleForKMS.Arn
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS:
              - !If [cDevEnv, !Join [ "", [ 'arn:aws:iam::', !Ref AWS::AccountId, ':role/Bancolombia-dev-packer-instance-profile-Rol-VSTS']] , !Ref "AWS::NoValue"]
              - !Join [ "", [ 'arn:aws:iam::', !Ref pSharedAccountNumber, ':root']]
              - !GetAtt rIAMRoleForKMSUser.Arn
              - !Join [ "", [ 'arn:aws:iam::', !Ref AWS::AccountId, ':role/', !Join [ "-", [ !Ref pApplicationCode, !Ref pProjectName, !Ref pEnvironment, 's3-databaselambdas-rol']]]]
              - !Join [ "", [ 'arn:aws:iam::', !Ref AWS::AccountId, ':role/', !Join [ "-", [ !Ref pApplicationCode, !Ref pProjectName, !Ref pEnvironment, 'ldappolicy-lambda-rol']]]]
            Action:
            - kms:Encrypt
            - kms:Decrypt
            - kms:ReEncrypt*
            - kms:GenerateDataKey*
            - kms:DescribeKey
            Resource: "*"

  rKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Join ["", ["alias/", !Ref 'pApplicationCode',"-", !Ref 'pProjectName',"-", !Ref pEnvironment,"-", "kms-Transversal"]]
      TargetKeyId: !Ref rKmsKeyTransversal

  rSecretSmtp:
    Type: AWS::SecretsManager::Secret
    DependsOn: rKmsKeyTransversal
    Properties:
      Name:
        Fn::Join: ["-", [ !Ref pApplicationCode, !Ref pProjectName, !Ref pEnvironment, "secret-email" ]]
      Description: 'Secreto email '
      KmsKeyId: !Ref rKmsKeyTransversal
      SecretString:
        Fn::If:
          - cDeploySecretSmtp
          - !Join ["", ["{\"usersmtp\":\"", !Ref pUserSmtp,"\",",
            "\"passwdsmtp\":\"", !Ref pUserPasswdSmtp,"\",",
            "\"hostsmtp\":\"", !Ref pHostSmtp,"\",",
            "\"portsmtp\":\"", !Ref  pPortSmtp,"\"}"
            ]]
          - Ref: AWS::NoValue

  rKMSLatestARN:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Join ["-", [!Ref 'AWS::StackName' ,'latest'] ]
      Type: "String"
      Value:
        Fn::GetAtt: rKmsKeyTransversal.Arn
      Description: !Join [ '',  [ 'Ultima KMS  en el ambiente de ', !Ref pEnvironment , ' para la aplicacion ', !Ref pApplicationCode, '-', !Ref pProjectName, ' '] ]
